<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sword.Nine.WebApi</name>
    </assembly>
    <members>
        <member name="T:Sword.Nine.Api.Controllers.SnClassAttributeController">
            <summary>
            类别属性
            </summary>
        </member>
        <member name="M:Sword.Nine.Api.Controllers.SnClassAttributeController.#ctor(Sword.Nine.Service.ISnClassAttributeService,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            构造函数
            </summary>
            <param name="service">类别属性服务</param>
            <param name="loggerFactory">日志服务</param>>
        </member>
        <member name="M:Sword.Nine.Api.Controllers.SnClassAttributeController.SaveAsync(System.Collections.Generic.List{Sword.Nine.Domain.SnClassAttributeListDto})">
            <summary>
            保存类别属性，包括新增、修改、删除等
            </summary>
            <param name="dtolist"></param>
            <returns></returns>
        </member>
        <member name="T:Sword.Nine.Api.Controllers.SnClassController">
            <summary>
            类别表
            </summary>
        </member>
        <member name="M:Sword.Nine.Api.Controllers.SnClassController.#ctor(Sword.Nine.Service.ISnClassService,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            构造函数
            </summary>
            <param name="service">类别表服务</param>
            <param name="loggerFactory">日志服务</param>>
        </member>
        <member name="M:Sword.Nine.Api.Controllers.SnClassController.GetByUrl">
            <summary>
            根据rul查询数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sword.Nine.Api.Controllers.SnClassController.GetDirectoryClassAsync">
            <summary>
            获取目录类别树
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sword.Nine.Api.Controllers.SnClassController.GetInfo(System.String)">
            <summary>
            获取类别信息及属性信息
            </summary>
            <param name="classId"></param>
            <returns></returns>
        </member>
        <member name="T:Sword.Nine.Api.Controllers.SnClassDirectoryController">
            <summary>
            类别目录
            </summary>
        </member>
        <member name="M:Sword.Nine.Api.Controllers.SnClassDirectoryController.#ctor(Sword.Nine.Service.ISnClassDirectoryService,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            构造函数
            </summary>
            <param name="service">类别目录服务</param>
            <param name="loggerFactory">日志服务</param>>
        </member>
        <member name="M:Sword.Nine.Api.Controllers.SnClassDirectoryController.GetDirectoryTreeAsync">
            <summary>
            获取目录树
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sword.Nine.Api.Controllers.SnClassDirectoryController.SaveDrawingAsync(Sword.Nine.Domain.Dto.DataSource.directory.DrawingSaveDto)">
            <summary>
            保存绘图
            </summary>
            <param name="directoryId">目录id</param>
            <param name="cellDtos"></param>
            <returns></returns>
        </member>
        <member name="T:Sword.Nine.Api.Controllers.SnDataSourceController">
            <summary>
            数据源表
            </summary>
        </member>
        <member name="M:Sword.Nine.Api.Controllers.SnDataSourceController.#ctor(Sword.Nine.Service.ISnDataSourceService,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            构造函数
            </summary>
            <param name="service">数据源表服务</param>
            <param name="loggerFactory">日志服务</param>>
        </member>
        <member name="M:Sword.Nine.Api.Controllers.SnDataSourceController.Import">
            <summary>
            导入数据源及数据
            </summary>
            <returns></returns>
        </member>
        <member name="T:Sword.Nine.Api.Controllers.SnRuleClassAttributeSettingController">
            <summary>
            规则类别属性配置表
            </summary>
        </member>
        <member name="M:Sword.Nine.Api.Controllers.SnRuleClassAttributeSettingController.#ctor(Sword.Nine.Service.ISnRuleClassAttributeSettingService,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            构造函数
            </summary>
            <param name="service">规则类别属性配置表服务</param>
            <param name="loggerFactory">日志服务</param>>
        </member>
        <member name="M:Sword.Nine.Api.Controllers.SnRuleClassAttributeSettingController.UpdateOrInsertRuleSetting(System.Collections.Generic.List{Sword.Nine.Domain.RuleAttributeSettingDto})">
            <summary>
            更新或新增规则配置
            </summary>
            <param name="dtos"></param>
            <returns></returns>
        </member>
        <member name="M:Sword.Nine.Api.Controllers.SnRuleClassAttributeSettingController.QueryAttrRuleSetting(System.String)">
            <summary>
            根据类别id获取属性规则配置
            </summary>
            <param name="classId"></param>
            <returns></returns>
        </member>
        <member name="T:Sword.Nine.Api.Controllers.SnRuleController">
            <summary>
            规则表
            </summary>
        </member>
        <member name="M:Sword.Nine.Api.Controllers.SnRuleController.#ctor(Sword.Nine.Service.ISnRuleService,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            构造函数
            </summary>
            <param name="service">规则表服务</param>
            <param name="loggerFactory">日志服务</param>>
        </member>
        <member name="M:Sword.Nine.Api.Controllers.SnRuleController.GetByAttributeIdAsync(System.String)">
            <summary>
            获取所有类别属性规则
            </summary>
            <param name="attrId">属性id</param>
            <returns></returns>
        </member>
        <member name="M:Sword.Nine.Api.Controllers.SnRuleController.SaveAsync(System.Collections.Generic.List{Sword.Nine.Domain.SnRule})">
            <summary>
            保存规则，包括新增、修改、删除等
            </summary>
            <param name="dtolist"></param>
            <returns></returns>
        </member>
        <member name="T:Sword.Nine.Api.Controllers.SnTemplateController">
            <summary>
            模板表
            </summary>
        </member>
        <member name="M:Sword.Nine.Api.Controllers.SnTemplateController.#ctor(Sword.Nine.Service.ISnTemplateService,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            构造函数
            </summary>
            <param name="service">模板表服务</param>
            <param name="loggerFactory">日志服务</param>>
        </member>
        <member name="M:Sword.Nine.Api.Controllers.SnTemplateController.UploadTemplate">
            <summary>
            上传模板文件夹
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="P:System.BasciSetting.RegisterDaoName">
            <summary>
            注册dao层的名称
            </summary>
        </member>
        <member name="P:System.BasciSetting.RegisterServiceName">
            <summary>
            注册service层名称
            </summary>
        </member>
        <member name="T:Wanna.EMS.Api.SettingConfig.SysSetting">
            <summary>
            系统配置
            </summary>
        </member>
        <member name="P:Wanna.EMS.Api.SettingConfig.SysSetting.EnableLoginTimeOut">
            <summary>
            是否启动登录超时
            </summary>
        </member>
        <member name="P:Wanna.EMS.Api.SettingConfig.SysSetting.EnableShowLogs">
            <summary>
            是否启动日志显示
            </summary>
        </member>
        <member name="P:Wanna.EMS.Api.SettingConfig.SysSetting.LoginTimeOut">
            <summary>
            登录超时时间：分钟
            </summary>
        </member>
        <member name="P:Wanna.EMS.Api.SettingConfig.SysSetting.SysTypeCateCode">
            <summary>
            应用系统字典类别code
            </summary>
        </member>
        <member name="P:Wanna.EMS.Api.SettingConfig.SysSetting.FileUploadSettingCateCode">
            <summary>
            文件上传限制类别cateCode
            </summary>
        </member>
        <member name="P:Wanna.EMS.Api.SettingConfig.SysSetting.ImageFileUploadSettingCateCode">
            <summary>
            图片文件限制上传code
            </summary>
        </member>
        <member name="P:Wanna.EMS.Api.SettingConfig.SysSetting.EquipDocLimitCateCode">
            <summary>
            设备文档限制上传字典类别code
            </summary>
        </member>
        <member name="P:Wanna.EMS.Api.SettingConfig.SysSetting.EquipDocTypeCateCode">
            <summary>
            设备文档类型Code
            </summary>
        </member>
        <member name="P:Wanna.EMS.Api.SettingConfig.SysSetting.EquipTypeCateCode">
            <summary>
            设备类别字典类别code
            </summary>
        </member>
        <member name="T:Wanna.EMS.Api.SettingConfig.TokenManagement">
            <summary>
            token配置
            </summary>
        </member>
        <member name="P:Wanna.EMS.Api.SettingConfig.TokenManagement.Secret">
            <summary>
            Secret
            </summary>
        </member>
        <member name="P:Wanna.EMS.Api.SettingConfig.TokenManagement.Issuer">
            <summary>
            Issuer
            </summary>
        </member>
        <member name="P:Wanna.EMS.Api.SettingConfig.TokenManagement.Audience">
            <summary>
            Audience
            </summary>
        </member>
        <member name="P:Wanna.EMS.Api.SettingConfig.TokenManagement.AccessExpiration">
            <summary>
            AccessExpiration
            </summary>
        </member>
        <member name="P:Wanna.EMS.Api.SettingConfig.TokenManagement.RefreshExpiration">
            <summary>
            RefreshExpiration
            </summary>
        </member>
    </members>
</doc>
